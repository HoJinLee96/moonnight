<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<groupId>net.moonnight</groupId>
	<artifactId>moonnight</artifactId>
	<version>1.0.4</version>
	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<dependencies>

<!-- Spring Web MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>6.2.2</version>
        </dependency>

<!-- Spring JDBC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>6.2.2</version>
        </dependency>

<!-- Servlet API -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
        </dependency>

<!-- JSTL -->
		<dependency>
   			<groupId>jakarta.servlet.jsp.jstl</groupId>
		    <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
		    <version>3.0.2</version>
		</dependency>
		<dependency>
  <groupId>org.glassfish.web</groupId>
  <artifactId>jakarta.servlet.jsp.jstl</artifactId>
  <version>3.0.1</version>
</dependency>

<!-- Tomcat JDBC -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>10.1.28</version>
        </dependency>
		
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.0.33</version>
		</dependency>

		<!-- Apache Commons Codec --> <!-- import
		org.apache.commons.codec.binary.Base64; -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.15</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.16.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.16.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>2.16.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		    <version>2.16.2</version>
		</dependency>
		
		<!-- Apache HttpComponents-->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>

<!-- Redis -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-redis</artifactId>
		    <version>3.2.5</version>
		</dependency>
		
<!-- Jedis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>4.3.1</version>
        </dependency>


		<!-- 파일 업로드 -->
	    <dependency>
	        <groupId>commons-fileupload</groupId>
	        <artifactId>commons-fileupload</artifactId>
	        <version>1.4</version>
	    </dependency>

		<!-- 파일을 AWS S3에 저장하기 위한 의존-->
		<dependency>
		    <groupId>software.amazon.awssdk</groupId>
		    <artifactId>s3</artifactId>
		    <version>2.26.1</version>
		</dependency>

		<!-- junit 테스트 위한 라이브러리 -->
	 <!--   <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-api</artifactId>
	        <version>5.8.2</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-engine</artifactId>
	        <version>5.8.2</version>
	        <scope>test</scope>
	    </dependency>-->
<dependency>
  <groupId>org.junit.jupiter</groupId>
  <artifactId>junit-jupiter</artifactId>
  <version>5.10.0</version>
  <scope>test</scope>
</dependency>

	    <dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>6.0.12</version> <!-- 너 Spring 6.0.12 쓰니까 맞춰야 함 -->
		  <scope>test</scope>
		</dependency>
	
	    <!-- @PostConstruct 사용하기위해-->
	    <dependency>
		    <groupId>javax.annotation</groupId>
		    <artifactId>javax.annotation-api</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
		<!-- 외부 api 통신할때 -->
		<dependency>
		    <groupId>org.apache.httpcomponents.client5</groupId>
		    <artifactId>httpclient5</artifactId>
		    <version>5.2</version>
		</dependency>
		
		<!-- JWT -->
		<dependency>
		  <groupId>io.jsonwebtoken</groupId>
		  <artifactId>jjwt-api</artifactId>
		  <version>0.11.5</version>
		</dependency>
		<dependency>
		  <groupId>io.jsonwebtoken</groupId>
		  <artifactId>jjwt-impl</artifactId>
		  <version>0.11.5</version>
		  <scope>runtime</scope>
		</dependency>
		<dependency>
		  <groupId>io.jsonwebtoken</groupId>
		  <artifactId>jjwt-jackson</artifactId>
		  <version>0.11.5</version>
		  <scope>runtime</scope>
		</dependency>
		
		<!-- Spring Security 추가 -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>6.2.2</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId> <!-- Web 보안 기능 포함 -->
		    <version>6.2.2</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>6.2.2</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-jpa</artifactId>
		    <version>3.4.2</version>
		</dependency>
		
	    <!-- JPA API -->
		<dependency>
		    <groupId>jakarta.persistence</groupId>
		    <artifactId>jakarta.persistence-api</artifactId>
		    <version>3.1.0</version> <!-- JPA 버전에 맞게 설정 -->
		</dependency>
		
		<dependency>
		    <groupId>jakarta.validation</groupId>
		    <artifactId>jakarta.validation-api</artifactId>
		    <version>3.1.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-tx</artifactId>
		    <version>6.2.2</version>
		</dependency>
		
	   <!-- Spring ORM (JPA 지원) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-orm</artifactId>
	        <version>6.2.2</version> <!-- Spring 버전에 맞게 설정 -->
	    </dependency>
	
	    <!-- Hibernate JPA 구현체 -->
	    <dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-core</artifactId>
	        <version>6.5.2.Final</version> <!-- JPA 버전과 호환되는지 확인 -->
	    </dependency>
	    <dependency>
		  <groupId>org.hibernate.validator</groupId>
		  <artifactId>hibernate-validator</artifactId>
		  <version>8.0.1.Final</version> <!-- 또는 최신 안정 버전 -->
		</dependency>
	    
	    <dependency>
		    <groupId>net.bytebuddy</groupId>
		    <artifactId>byte-buddy</artifactId>
		    <version>1.14.10</version> <!-- Hibernate 6.5+ 호환 -->
		</dependency>
		
		<!-- valid 커스텀 애노에티션 사용시 필요-->
		<dependency>
		  <groupId>org.glassfish</groupId>
		  <artifactId>jakarta.el</artifactId>
		  <version>4.0.2</version>
		</dependency>
	    
        <!-- Spring Transaction 관리 -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-tx</artifactId>
	        <version>6.2.2</version>
	    </dependency>
	    
	    <!-- Lombok (자동 생성 애노테이션 지원) -->
	    <dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.30</version> <!-- 최신 버전 사용 -->
		    <scope>provided</scope>
		</dependency>
		
		<!-- Spring Security OAuth2 Client -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-oauth2-client</artifactId>
		    <version>6.2.2</version> <!-- 사용 중인 Spring Security 버전에 맞춰 지정 -->
		</dependency>

		<!-- OAuth2 Core (기본 구조 정의) -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-oauth2-core</artifactId>
		    <version>6.2.2</version>
		</dependency>
		
		<dependency>
		  <groupId>org.hashids</groupId>
		  <artifactId>hashids</artifactId>
		  <version>1.0.3</version>
		</dependency>
		
	</dependencies>

<build>
  <plugins>

    <!-- 컴파일러 플러그인 -->
    <plugin>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.10.1</version>
      <configuration>
        <source>21</source>
        <target>21</target>
        <encoding>UTF-8</encoding>
      </configuration>
    </plugin>

    <!-- JUnit 5용 surefire 플러그인 -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.1.2</version>
    </plugin>

  </plugins>
</build>

</project>